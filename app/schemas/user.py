from pydantic import BaseModel, EmailStr, ConfigDict, field_validator

from app.schemas.task import TaskRead

# –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞: –æ–±—â–∏–µ –ø–æ–ª—è, –Ω–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
class UserBase(BaseModel):
    username: str
    email: EmailStr

    @field_validator("username")
    @classmethod
    def strip_username(cls, v: str) -> str:
        return v.strip()


# –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(UserBase):
    pass


# –°—Ö–µ–º–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (–æ—Ç–≤–µ—Ç–∞): –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è id
class UserRead(UserBase):
    id: int
    tasks: list[TaskRead] = []  # üëà –í–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏

    model_config = ConfigDict(from_attributes=True)  # –ø–æ–∑–≤–æ–ª—è–µ—Ç FastAPI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å SQLAlchemy-–º–æ–¥–µ–ª—å –≤ Pydantic-—Å—Ö–µ–º—É
