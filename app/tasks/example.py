from time import sleep
from celery import Task

from app.celery_worker import celery_app


@celery_app.task(
        name="send_email_task",
        bind=True,  # üìå bind=True –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ –±—ã–ª –¥–æ—Å—Ç—É–ø –∫ self (Celery Task instance)
        max_retries=3,  # üìå max_retries ‚Äî —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ (–≤–∫–ª—é—á–∞—è –ø–µ—Ä–≤—É—é)
        default_retry_delay=60,  # üìå default_retry_delay ‚Äî –∑–∞–¥–µ—Ä–∂–∫–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö) –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
        acks_late=True,  # –ø–æ–¥—Ç–≤–µ—Ä–¥–∂–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        reject_on_worker_lost=True  # –ï—Å–ª–∏ –≤–æ—Ä–∫–µ—Ä –∑–∞–∫—Ä–∞—à–∏—Ç—Å—è/—É–ø–∞–¥—ë—Ç ‚Äî –∑–∞–¥–∞—á–∞ –ø–µ—Ä–µ–π–¥—ë—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å, –∞ –Ω–µ –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π.
)
def send_email_task(self: Task, to: str, subject: str, body: str) -> str:
    """
    –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ —Å retry –∏ countdown.
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
      to (str)        ‚Äî –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      subject (str)   ‚Äî —Ç–µ–º–∞ –ø–∏—Å—å–º–∞
      body (str)      ‚Äî —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
    
    –ü–æ–≤–µ–¥–µ–Ω–∏–µ:
      - –ü—Ä–∏ –ª—é–±–æ–π –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∑–∞–¥–∞—á–∞ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç self.retry()
      - retry() –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç countdown –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç retry count
      - –ü–æ—Å–ª–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è max_retries ‚Äî –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç—Å—è FAILURE
    """

    try:
        print(f"[send_email_task] Sending email to {to} with subject: '{subject}'")
        sleep(2)  # —ç–º—É–ª—è—Ü–∏—è –¥–æ–ª–≥–æ–π —Ä–∞–±–æ—Ç—ã

        # –ò–º–∏—Ç–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –æ—à–∏–±–∫–∏ (–ø—Ä–∏–º–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∞ retry)
        import random
        if random.choice([True, False]):
            raise ConnectionError("Simulated SMTP connection drop")

        print(f"[send_email_task] Email successfully sent to {to}")
        return f"Email sent to {to}"
    
    except Exception as exc:
        # üìå self.request.retries ‚Äî —Ç–µ–∫—É—â–µ–µ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ (0 –Ω–∞ –ø–µ—Ä–≤–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏)
        retries = self.request.retries
        print(f"[send_email_task] Exception: {exc!r}; retry {retries + 1}/{self.max_retries}")

        # –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–¥–∞—á—É —á–µ—Ä–µ–∑ default_retry_delay (–∏–ª–∏ —Å–≤–æ–π countdown)
        # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å countdown=int, —á—Ç–æ–±—ã –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å delay
        raise self.retry(exc=exc, countdown=self.default_retry_delay)